'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _sinon = require('sinon');

var _enzyme = require('enzyme');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _index = require('../index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('partflux Provider', function () {
  var _this = this;

  beforeEach(function () {
    _this.host = {
      setState: (0, _sinon.spy)(),
      state: { name: 'tom' }
    };
  });
  it('render single child', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(
      _index.Provider,
      { host: _this.host },
      _react2.default.createElement('div', null)
    ));
    _assert2.default.equal('<div></div>', wrapper.html());
  });

  it('create Store', function () {
    var wrapper = (0, _enzyme.mount)(_react2.default.createElement(
      _index.Provider,
      { host: _this.host },
      _react2.default.createElement('div', null)
    ));
    (0, _assert2.default)(wrapper.node.store);
  });

  it('getChildContext, componentWillMount, componentDidMount', function () {
    (0, _sinon.spy)(_index.Provider.prototype, 'getChildContext');
    (0, _sinon.spy)(_index.Provider.prototype, 'componentWillMount');
    (0, _sinon.spy)(_index.Provider.prototype, 'componentDidMount');
    var wrapper = (0, _enzyme.mount)(_react2.default.createElement(
      _index.Provider,
      { host: _this.host },
      _react2.default.createElement('div', null)
    ));
    (0, _assert2.default)(_index.Provider.prototype.getChildContext.calledOnce);
    (0, _assert2.default)(_index.Provider.prototype.componentWillMount.calledOnce);
    (0, _assert2.default)(_index.Provider.prototype.componentDidMount.calledOnce);
  });

  it('child get store from context', function () {
    var Child = function Child() {
      return _react2.default.createElement('div', null);
    };
    Child.contextTypes = {
      store: _react.PropTypes.object.isRequired
    };
    var wrapper = (0, _enzyme.mount)(_react2.default.createElement(
      _index.Provider,
      { host: _this.host },
      _react2.default.createElement(Child, null)
    ));
    var child = wrapper.find(Child);
    (0, _assert2.default)(child.node.context.store);
    (0, _assert2.default)(child.node.context.store instanceof _index.Store);
  });
});