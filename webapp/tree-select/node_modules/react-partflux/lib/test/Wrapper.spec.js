'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _sinon = require('sinon');

var _enzyme = require('enzyme');

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _index = require('../index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

describe('partflux Wrapper', function () {
  var _this = this;

  beforeEach(function () {
    var state = {
      name: 'tom',
      age: 20
    };
    _this.host = {
      setState: function setState(newState) {
        _lodash2.default.merge(state, newState);
      },
      state: state
    };
  });

  it('add ActionClass to props', function () {
    var Child = function Child() {
      return _react2.default.createElement('div', null);
    };
    var onClickFn = (0, _sinon.spy)();

    var MyAction = function MyAction() {
      _classCallCheck(this, MyAction);

      this.actions = {
        onClick: onClickFn
      };
    };

    var wrapper = (0, _enzyme.mount)(_react2.default.createElement(
      _index.Provider,
      { host: _this.host },
      _react2.default.createElement(
        _index.Wrapper,
        { ActionClass: MyAction },
        _react2.default.createElement(Child, null)
      )
    ));
    var child = wrapper.find(Child);
    _assert2.default.equal(onClickFn, child.node.props.onClick);
  });

  it('add actions to props', function () {
    var Child = function Child(_ref) {
      var onClickFn = _ref.onClickFn;
      return _react2.default.createElement('div', { onClick: onClickFn });
    };
    var onClickFn = (0, _sinon.spy)();
    var actions = {
      onClickFn: onClickFn
    };
    var wrapper = (0, _enzyme.mount)(_react2.default.createElement(
      _index.Provider,
      { host: _this.host },
      _react2.default.createElement(
        _index.Wrapper,
        { actions: actions },
        _react2.default.createElement(Child, null)
      )
    ));
    var child = wrapper.find(Child);
    child.simulate('click');
    (0, _assert2.default)(child.node.props.onClickFn);
    (0, _assert2.default)(onClickFn.calledOnce);
  });

  it('add state to props', function () {
    var Child = function Child() {
      return _react2.default.createElement('div', null);
    };
    var propsFn = function propsFn(state) {
      return {
        age: state.age + 10
      };
    };
    var wrapper = (0, _enzyme.mount)(_react2.default.createElement(
      _index.Provider,
      { host: _this.host },
      _react2.default.createElement(
        _index.Wrapper,
        { propsFn: propsFn },
        _react2.default.createElement(Child, null)
      )
    ));
    var child = wrapper.find(Child);
    _assert2.default.equal(30, child.node.props.age);
  });
});